name: Test

on:
  push:
    branches:
      - "**"
  pull_request:
    types: [ready_for_review, synchronize, opened]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [7.2, 7.3, 7.4, 8.0]
        laravel: [7.*, 8.*]
        dependency-version: [prefer-stable]
        exclude:
          - php: 7.2
            laravel: 8.*

    name: PHP:${{ matrix.php }} / Laravel:${{ matrix.laravel }}(${{ matrix.dependency-version }})

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          tools: composer:v2
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update --dev
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-suggest

      - name: Run Unit tests
        run: vendor/bin/phpunit --testsuite Unit
        env:
          RUNNING_IN_CI: true

      - name: Setup dusk/chrome
        run: vendor/bin/dusk-updater detect --no-interaction

      - name: Run Browser tests
        run: vendor/bin/phpunit --testsuite Browser
        env:
          RUNNING_IN_CI: true
